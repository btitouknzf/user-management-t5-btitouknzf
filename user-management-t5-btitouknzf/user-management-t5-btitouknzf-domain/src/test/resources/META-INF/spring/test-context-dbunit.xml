<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:jdbc="http://www.springframework.org/schema/jdbc"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
    xsi:schemaLocation="
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
        http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd
        
    ">
	
	<context:property-placeholder location="classpath*:/META-INF/spring/*.properties" />
	
	<tx:annotation-driven/>
	
	<bean id="realDataSource" class="org.apache.commons.dbcp2.BasicDataSource"
        destroy-method="close">
        <property name="driverClassName" value="${database.driverClassName}" />
        <property name="url" value="${database.url}" />
        <property name="username" value="${database.username}" />
        <property name="password" value="${database.password}" />
        <property name="defaultAutoCommit" value="false" />
        <property name="maxTotal" value="${cp.maxActive}" />
        <property name="maxIdle" value="${cp.maxIdle}" />
        <property name="minIdle" value="${cp.minIdle}" />
        <property name="maxWaitMillis" value="${cp.maxWait}" />
    </bean>
	
	<bean id="log4jDataSource" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
		<constructor-arg index="0" ref="realDataSource" />
	</bean>

    <bean id="dataSource" class="org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy">
        <constructor-arg index="0" ref="log4jDataSource" />
    </bean>

    <jdbc:initialize-database data-source="dataSource" ignore-failures="ALL">
        <jdbc:script location="classpath:/database/${database}-schema-test.sql" encoding="UTF-8" />
        <!-- 
        <jdbc:script location="classpath:/database/${database}-dataload-test.sql" encoding="UTF-8" />
		 -->
    </jdbc:initialize-database>
    
    <bean id="transactionManager"
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
        <property name="rollbackOnCommitFailure" value="true" />
    </bean>
	
	<!-- define the SqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="classpath:/META-INF/mybatis/mybatis-config.xml" />
    </bean>
    
    <bean id=""></bean>
    
	<!-- scan for Mappers -->
    <mybatis:scan base-package="com.example.terasoluna.domain.repository" />
	
	<bean id="jdbcTemplateForCodeList" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource" />
        <property name="fetchSize" value="${codelist.jdbc.fetchSize:1000}" />
    </bean>

    <bean id="AbstractJdbcCodeList"
          class="org.terasoluna.gfw.common.codelist.JdbcCodeList" abstract="true">
        <property name="jdbcTemplate" ref="jdbcTemplateForCodeList" />
    </bean>
    
    
	
	
	<context:annotation-config />
	<context:component-scan base-package="com.example.terasoluna.domain" />
	
	<!-- AOP. -->
    <bean id="resultMessagesLoggingInterceptor" class="org.terasoluna.gfw.common.exception.ResultMessagesLoggingInterceptor">
          <property name="exceptionLogger" ref="exceptionLogger" />
    </bean>
    <bean id="exceptionLogger" class="org.terasoluna.gfw.common.exception.ExceptionLogger" />
    <aop:config>
        <aop:advisor advice-ref="resultMessagesLoggingInterceptor" pointcut="@within(org.springframework.stereotype.Service)" />
    </aop:config>
	
	
</beans>
